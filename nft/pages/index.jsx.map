{"version":3,"file":"index.jsx","sourceRoot":"","sources":["index.tsx"],"names":[],"mappings":"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","sourcesContent":["\nimport MintNFT from '../components/MintNFT';\nimport Head from 'next/head'\nimport type { NextPage } from 'next'\nimport styles from '../styles/Home.module.css'\nimport { useState, useEffect } from \"react\";\nimport WalletInfo from '../components/WalletInfo';\nimport {\n  Assets,\n  Address, \n  ByteArrayData,\n  Cip30Handle,\n  Cip30Wallet,\n  ConstrData, \n  hexToBytes, \n  NetworkParams,\n  Program,\n  Value, \n  TxOutput,\n  Tx,\n  WalletHelper} from \"@hyperionbt/helios\";\n\ndeclare global {\n  interface Window {\n      cardano:any;\n  }\n}\n\n// The enableWallet() function will put the wallet's Cip30Handle here\n//  once it has validated the user's wallet existence.\nlet g_Cip30Handle: Cip30Handle;\n\n// The ID of the Cardano network currently selected in the user's\n//  wallet will be placed here.\nlet g_NetworkId = null;\n\n/**\n * Check if a string is empty or whitespace\n *\n * @param {string} str - The string to check\n *\n * @returns {boolean} - Returns TRUE if the string is \"null\", all\n *  whitespace, or of length zero, FALSE otherwise\n */\nfunction isStringEmptyOrWhitespace(str: string) {\n  // validate the input parameter\n  if (typeof str !== 'string') {\n    throw new Error('Input must be of type string');\n  }\n\n  // return true if the string is \"null\" or of length zero after trimming\n  return str === null || str.trim().length < 1;\n}\n\n/**\n * Positions the target DOM element directly over the source DOM element.\n *\n * @param {HTMLElement} srcElement - The source DOM element.\n * @param {HTMLElement} trgElement - The target DOM element.\n */\nfunction positionOverElement(srcElement: object, trgElement: object) {\n  if (!srcElement || !trgElement)\n    throw new Error(\"Both source and target elements are required\");\n\n  trgElement.style.position = \"absolute\";\n  trgElement.style.left = srcElement.offsetLeft + \"px\";\n  trgElement.style.top = srcElement.offsetTop + \"px\";\n}\n\n/**\n * Set the text that will be shown next to the animation spinner.\n *\n * @param {string} newText - The string to check\n *\n */\nfunction setSpinnerAnimationText(newText: string) {\n  if (isStringEmptyOrWhitespace(newText))\n    throw new Error('The animation spinner text is empty or invalid');\n\n  // update the text that will be shown in the spinner animation\n  document.querySelector(\".spinner-text\").textContent = newText;\n}\n\n/**\n * Show the animation spinner\n *\n * @param {string} newText - The string to check\n */\nfunction showAnimationSpinner(newText: string) {\n  if (!isStringEmptyOrWhitespace(newText))\n    setSpinnerAnimationText(newText);\n\n  document.querySelector(\".spinner-container\").style.display = \"flex\";\n\n  // TODO: Remove this code and put it in the main CSS file once we figure\n  //  out why our style modifications in the fil are not showing up\n  //  during run-time.\n  document.querySelector(\".spinner-container\").style.position = \"absolute\";\n  document.querySelector(\".spinner-container\").style.left = \"50%\";\n  document.querySelector(\".spinner-container\").style.top = \"50%\";\n  document.querySelector(\".spinner-container\").style.transform = \"translate(-50%, -50%)\";\n  document.querySelector(\".spinner-container\").style.color  = \"white\";\n  document.querySelector(\".spinner-container\").style.background = \"blue\";\n\n}\n\n/**\n * Hide the animation spinner\n */\nfunction hideAnimationSpinner() {\n  document.querySelector(\".spinner-container\").style.display = \"none\";\n}\n\n/**\n * This function wraps an async call (promise) so that the busy\n *  animation is shown before the call is made, and hidden\n *  when the call is done (or errors our).\n *\n * @param {Promise} funcAsync - The async function to call.\n * @param {string} spinnerText - The busy animaton message\n *  that will be displayed next to the spinner animation.\n *\n * @returns {Promise<*>}\n */\nasync function doAsyncWithBusyAnimation(funcAsync: Promise<any>, spinnerText: string = 'Querying...') {\n  if (!(funcAsync instanceof  Promise))\n    throw new Error('The value in the funcAsync parameter is not a promise.');\n  if (isStringEmptyOrWhitespace(spinnerText))\n    throw new Error('The spinner text is empty or invalid.')\n\n  try {\n    // Show the animation spinner with the desired busy message.\n    showAnimationSpinner(spinnerText);\n\n    // Make the async call.\n    const retVal = await funcAsync;\n\n    hideAnimationSpinner();\n    return retVal;\n  } catch (err) {\n    // Make sure the spinner animation is hidden.\n    hideAnimationSpinner();\n\n    // Let the caller deal with the error.\n    throw err;\n  }\n}\n\n/**\n * Get the ID of the Cardano network currently selected in the\n *  user's wallet.\n *\n * NOTE: This function should not be called before the wallet\n *  has been enabled!\n *\n * @return {number|null} - If successful this function returns\n *  the numeric ID of the wallet currently selected by the user.\n *  If an error occurred, then NULL is returned.\n */\nasync function updateNetworkId() {\n  // Make sure the CIP30Handle variable has been assigned.\n  if (g_Cip30Handle === null)\n    throw new Error(`The CIP30Handle variable is unassigned.  Cannot get current network ID.`);\n\n  let bErrorOccurred = false;\n\n  const networkId = await g_Cip30Handle.getNetworkId()\n      .catch(err => {\n        bErrorOccurred = true;\n\n        console.error(`The following error occurred while trying to get the current network ID:`);\n        console.error(err);\n      });\n\n  if (bErrorOccurred)\n    return null;\n  else\n    return networkId;\n}\n\n/*\n This sets the selected Cardano network.  Valid values are:\n\n  preprod    - The preview production network\n  preview    - The preview test network\n  mainnet    - The main network\n\n  WARNING: If this value doesn't match what network the user currently\n    has selected in their wallet, you end up with a contextually corrupt\n    processing environment.\n */\nexport var selectedNetwork = 'preview';\nexport var SUPPORTED_WALLETS = [\n  \"nami\",\n  \"flint\",\n  \"eternl\",\n  \"Fake - Does not exist\",\n];\n\nexport type SUPPORTED_WALLETS_TYPE = typeof SUPPORTED_WALLETS[number];\n\nconst Home: NextPage = () => {\n  const optimize = false;\n  const networkParamsUrl = `https://d1t0d7c2nekuk0.cloudfront.net/${selectedNetwork}.json`;\n  const [walletAPI, setWalletAPI] = useState<undefined | any>(undefined);\n  const [tx, setTx] = useState({ txId: \"\" });\n  const [walletInfo, setWalletInfo] = useState({ balance: \"\" });\n  const [walletIsEnabled, setWalletIsEnabled] = useState(false);\n  const [whichWalletSelected, setWhichWalletSelected] =\n    useState<SUPPORTED_WALLETS_TYPE>();\n\n  useEffect(() => {\n    const checkWallet = async () => {\n      setWalletIsEnabled(await checkIfWalletFound());\n    };\n    checkWallet();\n  }, [whichWalletSelected]); \n\n  useEffect(() => {\n    const enableSelectedWallet = async () => {\n      if (walletIsEnabled) {\n        const api = await enableWallet();\n        setWalletAPI(api);\n\n        // Get the active network ID.\n        const networkId = (await doAsyncWithBusyAnimation(updateNetworkId())) as string;\n        console.warn(`The ID of the Cardano network currently selected by the user is: ${networkId}`);\n      }\n    };\n    enableSelectedWallet();\n  }, [walletIsEnabled, whichWalletSelected]);\n\n  useEffect(() => {\n    const updateWalletInfo = async () => {\n        if (walletIsEnabled) {\n        const _balance = (await doAsyncWithBusyAnimation(getBalance())) as string;\n            setWalletInfo({\n              ...walletInfo,\n          balance: _balance,\n            });\n        }           \n    };\n    updateWalletInfo();\n  }, [walletAPI]);\n\n  // user selects what wallet to connect to\n  const handleWalletSelect = (obj : any) => {\n    const whichWalletSelected = obj.target.value;\n    setWhichWalletSelected(whichWalletSelected);\n  };\n\n  const checkIfWalletFound = async () => {\n    if (!whichWalletSelected) return false;\n      \n    if (!window.cardano) return false;\n\n    return !!window.cardano[whichWalletSelected];\n  };\n\n  const enableWallet = async () => {\n      try {\n        const walletChoice = whichWalletSelected;\n\n        if (!walletChoice) return;\n\n        const handle: Cip30Handle = await window.cardano[walletChoice].enable();\n\n        // Hoist the CIP30Handle up to a page level variable. We\n        //  will need it later to get the network ID.\n        g_Cip30Handle = handle;\n\n        const walletAPI = new Cip30Wallet(handle);\n\n        return walletAPI;\n      } catch (err) {\n        console.log(\"enableWallet error\", err);\n        setWhichWalletSelected(undefined);\n      }\n  };\n\n  const getBalance = async () => {\n    try {\n        const walletHelper = new WalletHelper(walletAPI);\n        const balanceAmountValue  = await walletHelper.calcBalance();\n        const balanceAmount = balanceAmountValue.lovelace;\n        const walletBalance : BigInt = BigInt(balanceAmount);\n        return walletBalance.toLocaleString();\n    } catch (err) {\n      console.log(\"getBalance error: \", err);\n  }\n  };\n\n  const mintNFT = async (params : any) => {\n    const address = params[0];\n    const name = params[1];\n    const description = params[2];\n    const img = params[3];\n    const minAdaVal = new Value(BigInt(2000000));  // minimum Ada needed to send an NFT\n\n    // Get wallet UTXOs\n    const walletHelper = new WalletHelper(walletAPI);\n    const utxos = await walletHelper.pickUtxos(minAdaVal);\n \n    // Get change address\n    const changeAddr = await walletHelper.changeAddress;\n\n    // Determine the UTXO used for collateral\n    const colatUtxo = await walletHelper.pickCollateral();\n\n    // Start building the transaction\n    const tx = new Tx();\n\n    // Add the UTXO as inputs\n    tx.addInputs(utxos[0]);\n\n    const mintScript =\n      `minting nft\n\n    const TX_ID: ByteArray = #` +\n      utxos[0][0].txId.hex +\n      `\n    const txId: TxId = TxId::new(TX_ID)\n    const outputId: TxOutputId = TxOutputId::new(txId, ` +\n      utxos[0][0].utxoIdx +\n      `)\n    \n    func main(ctx: ScriptContext) -> Bool {\n        tx: Tx = ctx.tx;\n        mph: MintingPolicyHash = ctx.get_current_minting_policy_hash();\n    \n        assetclass: AssetClass = AssetClass::new(\n            mph, \n            \"` +\n      name +\n      `\".encode_utf8()\n        );\n        value_minted: Value = tx.minted;\n    \n        // Validator logic starts\n        (value_minted == Value::new(assetclass, 1)).trace(\"NFT:1 \") &&\n        tx.inputs.any((input: TxInput) -> Bool {\n                                        (input.output_id == outputId).trace(\"NFT2: \")\n                                        }\n        )\n    }`;\n    \n    // Compile the helios minting script\n    const mintProgram = Program.new(mintScript).compile(optimize);\n\n    // Add the script as a witness to the transaction\n    tx.attachScript(mintProgram);\n\n    // Construct the NFT that we will want to send as an output\n    const nftTokenName = ByteArrayData.fromString(name).toHex();\n    const tokens: [number[], bigint][] = [\n      [hexToBytes(nftTokenName), BigInt(1)],\n    ];\n\n    // Create an empty Redeemer because we must always send a Redeemer with\n    // a plutus script transaction even if we don't actually use it.\n    const mintRedeemer = new ConstrData(0, []);\n\n    // Indicate the minting we want to include as part of this transaction\n    tx.mintTokens(mintProgram.mintingPolicyHash, tokens, mintRedeemer);\n\n    // Construct the output and include both the minimum Ada as well as the minted NFT\n    tx.addOutput(\n      new TxOutput(\n      Address.fromBech32(address),\n        new Value(\n          minAdaVal.lovelace,\n          new Assets([[mintProgram.mintingPolicyHash, tokens]])\n        )\n      )\n    );\n\n    // Add the collateral utxo\n    tx.addCollateral(colatUtxo);\n\n    const networkParams = new NetworkParams(\n      await fetch(networkParamsUrl).then((response) => response.json())\n    );\n\n    // Attached the metadata for the minting transaction\n    tx.addMetadata(721, {\n      map: [\n        [\n          mintProgram.mintingPolicyHash.hex,\n          {\n            map: [\n              [\n                name,\n                                      {\n                  map: [\n                    [\"name\", name],\n                                                [\"description\", description],\n                    [\"image\", img],\n                  ],\n                },\n              ],\n            ],\n          },\n        ],\n      ],\n    });\n\n    console.log(\"tx before final\", tx.dump());\n\n    // Send any change back to the buyer\n    await tx.finalize(networkParams, changeAddr);\n    console.log(\"tx after final\", tx.dump());\n\n    console.log(\"Verifying signature...\");\n    const signatures = await walletAPI.signTx(tx);\n    tx.addSignatures(signatures);\n    \n    console.log(\"Submitting transaction...\");\n    const txHash = await walletAPI.submitTx(tx);\n    \n    console.log(\"txHash\", txHash);\n    setTx({ txId: txHash.hex });\n  };\n\n  return (\n    <div className={styles.container}>\n      <Head>\n        <title>Helios Tx Builder</title>\n        <meta name='description' content='Littercoin web tools page' />\n        <link rel='icon' href='/favicon.ico' />\n      </Head>\n\n      {/* container for the spinner animation */}\n      <div className=\"spinner-container\">\n        {/* the spinner itself */}\n        <div className=\"spinner\"></div>\n        {/* the text next to the spinner */}\n        <div className=\"spinner-text\"></div>\n      </div>\n\n      <main className={styles.main}>\n        <h3 className={styles.title}>Helios Tx Builder</h3>\n   \n        <div className={styles.borderwallet}>\n          <p>Connect to your wallet</p>\n          {SUPPORTED_WALLETS.map((wallet) => (\n            <p key={wallet} className={styles.borderwallet}>\n              <input\n                type='radio'\n                id={wallet}\n                name='wallet'\n                value={wallet}\n                onChange={handleWalletSelect}\n              />\n              <label>{wallet}</label>\n            </p>\n          ))}\n        </div>\n        {!tx.txId && walletIsEnabled && (\n          <div className={styles.border}>\n            <WalletInfo walletInfo={walletInfo} />\n          </div>\n        )}\n        {tx.txId && (\n          <div className={styles.border}>\n            <b>Transaction Success!!!</b>\n            <p>\n              TxId &nbsp;&nbsp;\n              <a\n                href={`https://${selectedNetwork}.cexplorer.io/tx/` + tx.txId}\n                target='_blank'\n                rel='noopener noreferrer'\n              >\n                {tx.txId}\n              </a>\n            </p>\n            <p>\n              Please wait until the transaction is confirmed on the blockchain\n              and reload this page before doing another transaction\n            </p>\n          </div>\n        )}\n        {walletIsEnabled && !tx.txId && (\n          <div className={styles.border}>\n            <MintNFT onMintNFT={mintNFT} />\n          </div>\n        )}\n      </main>\n\n      <footer className={styles.footer}></footer>\n    </div>\n  );\n};\n\nexport default Home"]}